{"ast":null,"code":"function throwError(state, props) {\n  var partialVisbile = props.partialVisbile,\n      centerMode = props.centerMode,\n      ssr = props.ssr,\n      responsive = props.responsive,\n      infinite = props.infinite;\n\n  if (partialVisbile && centerMode) {\n    throw new Error(\"center mode can not be used at the same time with partialVisbile\");\n  }\n\n  if (!responsive) {\n    if (ssr) {\n      throw new Error(\"ssr mode need to be used in conjunction with responsive prop\");\n    } else {\n      throw new Error(\"Responsive prop is needed for deciding the amount of items to show on the screen\");\n    }\n  }\n\n  if (responsive && typeof responsive !== \"object\") {\n    throw new Error(\"responsive prop must be an object\");\n  }\n}\n\nexport default throwError;","map":{"version":3,"sources":["/Users/admin/Desktop/REACT/with-apollo-app/components/utils/throwError.js"],"names":["throwError","state","props","partialVisbile","centerMode","ssr","responsive","infinite","Error"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;AAAA,MACxBC,cADwB,GACkCD,KADlC,CACxBC,cADwB;AAAA,MACRC,UADQ,GACkCF,KADlC,CACRE,UADQ;AAAA,MACIC,GADJ,GACkCH,KADlC,CACIG,GADJ;AAAA,MACSC,UADT,GACkCJ,KADlC,CACSI,UADT;AAAA,MACqBC,QADrB,GACkCL,KADlC,CACqBK,QADrB;;AAEhC,MAAIJ,cAAc,IAAIC,UAAtB,EAAkC;AAChC,UAAM,IAAII,KAAJ,CACJ,kEADI,CAAN;AAGD;;AACD,MAAI,CAACF,UAAL,EAAiB;AACf,QAAID,GAAJ,EAAS;AACP,YAAM,IAAIG,KAAJ,CACJ,8DADI,CAAN;AAGD,KAJD,MAIO;AACL,YAAM,IAAIA,KAAJ,CACJ,kFADI,CAAN;AAGD;AACF;;AACD,MAAIF,UAAU,IAAI,OAAOA,UAAP,KAAsB,QAAxC,EAAkD;AAChD,UAAM,IAAIE,KAAJ,CAAU,mCAAV,CAAN;AACD;AACF;;AAED,eAAeR,UAAf","sourcesContent":["function throwError(state, props) {\n  const { partialVisbile, centerMode, ssr, responsive, infinite } = props;\n  if (partialVisbile && centerMode) {\n    throw new Error(\n      \"center mode can not be used at the same time with partialVisbile\"\n    );\n  }\n  if (!responsive) {\n    if (ssr) {\n      throw new Error(\n        \"ssr mode need to be used in conjunction with responsive prop\"\n      );\n    } else {\n      throw new Error(\n        \"Responsive prop is needed for deciding the amount of items to show on the screen\"\n      );\n    }\n  }\n  if (responsive && typeof responsive !== \"object\") {\n    throw new Error(\"responsive prop must be an object\");\n  }\n}\n\nexport default throwError;\n"]},"metadata":{},"sourceType":"module"}